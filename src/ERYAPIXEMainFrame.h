/***************************************************************
 * Name:      ERYAPIXEMainFrame.h
 * Purpose:   ERYA Main Program classes
 * Author:    Vasco Manteigas (vm.manteigas@campus.fct.utl.pt)
 * Created:   2015-12-01
 * Copyright: Grupo de Reacoes Nucleares - LIBPHYS
 * License:
 **************************************************************/

#ifndef __ERYAPIXEMainFrame__
#define __ERYAPIXEMainFrame__

/**
@file
Subclass of MainFrame, which is generated by wxFormBuilder.
*/

#include "ERYAPIXE.h"
#include "DatabaseLibrary.h"
#include "ParserLibrary.h"
#include "ReactionYield.h"
#include "PlotLibrary.h"
#include "XlsxLibrary.h"



//// end generated include

/** Implementing MainFrame */
class ERYAPIXEMainFrame : public MainFrame
{
	protected:
		// Handlers for MainFrame events.
		void OnFileNew( wxCommandEvent& event );
		void OnFileOpen( wxCommandEvent& event );
		void OnFileSave( wxCommandEvent& event );
		void OnFileSaveAs( wxCommandEvent& event );
		void OnFileQuit( wxCommandEvent& event );
		void OnDatabaseDetector( wxCommandEvent& event );
		void OnDatabaseElements( wxCommandEvent& event );
		void OnDatabaseZiegler( wxCommandEvent& event );
        void OnDatabaseSetup( wxCommandEvent& event );
		void OnHelpAbout( wxCommandEvent& event );
		void OnElement( wxCommandEvent& event );
		void OnGammaPeak( wxCommandEvent& event );
		void OnNumberTrigger( wxSpinEvent& event );
        void OnDirectNumberTrigger( wxCommandEvent& event );
        void OnMainNew( wxCommandEvent& event );
        void OnMainCheck( wxCommandEvent& event );
        void OnMainAdvanced( wxCommandEvent& event );
        void OnMainHelp( wxCommandEvent& event );
		void OnMainFit( wxCommandEvent& event );
		void OnMainStop( wxCommandEvent& event );
		// Local Variables
		DetectorParameters CurrentDetectorParameters; // Local Detector Setup
		ZieglerParameters CurrentZieglerParameters; // Local Ziegler Setup
        ElementDatabaseArray OpenDatabase; // Local Default database
        ElementSRIMArray CurrentSRIMTables; // Local SRIM Tables database
        wxString CurrentConfig,CurrentDetectorFile,CurrentDatabaseFile,CurrentZieglerFile; //Default Database Directory
        bool ResetDatabase; //Refresh flag
        bool CloseProgram; //Refresh flag
        bool AcceptSync;
        int FitIterations,LogTau,LogYield,LogStoichiometry,IterationSum;
        bool SucefulFit; //Internal flag
        bool CurrentMode;
	public:
		/** Constructor */
		ERYAPIXEMainFrame( wxWindow* parent );
	//// end generated class members
		void SaveDetector(DetectorParameters ThisDetector) { CurrentDetectorParameters = ThisDetector; return;}  // Safe storing method
		void SaveZiegler(ZieglerParameters ThisZiegler) { CurrentZieglerParameters = ThisZiegler; return;}  // Safe storing method
        void SaveDatabase(ElementDatabaseArray ThisDatabase) { OpenDatabase = ThisDatabase; return;}  // Safe storing method
        void SaveSRIM(ElementSRIMArray ThisSRIM) {CurrentSRIMTables = ThisSRIM; return;} // Safe storing method
        void RefreshDatabase(bool ResetAction) { ResetDatabase = ResetAction; return;}  // Safe storing method
        void ProgramQuit(bool QuitFlag) { CloseProgram = QuitFlag; return;}  // Safe storing method
        void GetDatabase(ElementDatabaseArray& ThisDatabase) { ThisDatabase = OpenDatabase; return;}  // Safe sync method
        void GetDetector(DetectorParameters& ThisDetector) { ThisDetector = CurrentDetectorParameters; return;}  // Safe sync method
        void GetZiegler(ZieglerParameters& ThisZiegler) { ThisZiegler = CurrentZieglerParameters; return;}  // Safe sync method
        void GetSRIM(ElementSRIMArray& ThisSRIM) {ThisSRIM = CurrentSRIMTables; return;} // Safe storing method
        void GetConfig(wxString& ThisConfig) { ThisConfig = CurrentConfig; return;}  // Safe sync method
        void GetDetectorFileName(wxString& ThisDFN) { ThisDFN = CurrentDetectorFile; return;}  // Safe sync method
        void GetDatabaseFileName(wxString& ThisEFN) { ThisEFN = CurrentDatabaseFile; return;}  // Safe sync method
        void GetZieglerFileName(wxString& ThisZFN) { ThisZFN = CurrentZieglerFile; return;}  // Safe sync method
        void SetConfig(wxString ThisConfig) { CurrentConfig = ThisConfig; return;}  // Safe sync method
        void SetDetectorFileName(wxString ThisDFN) { CurrentDetectorFile = ThisDFN; return;}  // Safe sync method
        void SetDatabaseFileName(wxString ThisEFN) { CurrentDatabaseFile = ThisEFN; return;}  // Safe sync method
        void SetZieglerFileName(wxString ThisZFN) {  CurrentZieglerFile  = ThisZFN; return;}  // Safe sync method
		bool IsDetectorEmpty(DetectorParameters ThisDetector) { return !(ThisDetector.GetDetectorEnergy().GetCount() > 0 || ThisDetector.GetDetectorFunction().Len()>0); }  // Check if Detector Setup are empty
		bool IsZieglerEmpty(ZieglerParameters ThisZiegler) { return !(ThisZiegler.GetZieglerElements().GetCount() > 0);  }  // Check if Ziegler Setup are empty
		bool IsDatabaseEmpty(ElementDatabaseArray ThisDatabase) { return !(ThisDatabase.GetCount() > 0);  }  // Check if the Database are empty
		void SetSync(bool flag){AcceptSync = flag; return;}
		void SetDefault(bool flag){CurrentMode = flag; return;}
        void SyncFitParameters(int& fi, int& lt, int& ly, int& ls){ FitIterations = fi; LogTau = lt; LogYield = ly; LogStoichiometry = ls; return;}
        void GetFitParameters(int& fi, int& lt, int& ly, int& ls){ fi = FitIterations; lt = LogTau; ly = LogYield; ls = LogStoichiometry; return;}
        void GenerateTable(int Number);
        void GenerateTable();
        void GenerateLog(int Number);
        void GenerateLog();
        bool StartUpProgram();
        bool StartUpDatabases(wxString MainDirectory, wxString MainDetector, wxString MainDatabase, wxString MainZiegler);
        bool StartUpDatabases();
        bool LoadSetupFile(wxString& MainDirectory, wxString& MainDetector, wxString& MainDatabase, wxString& MainZiegler);
        bool SaveSetupFile(wxString MainDirectory, wxString MainDetector, wxString MainDatabase, wxString MainZiegler, bool LocalSetting);
        bool DeleteSetupFile();
        bool ReplaceSetupFile();

};

#endif // __ERYAPIXEMainFrame__
